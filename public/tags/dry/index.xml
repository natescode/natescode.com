<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DRY on natescode blog</title>
    <link>http://localhost:1313/tags/dry/</link>
    <description>Recent content in DRY on natescode blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>All Rights Reserved</copyright>
    <lastBuildDate>Fri, 28 Jun 2024 10:24:34 -0600</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/dry/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dry Brittle Code</title>
      <link>http://localhost:1313/posts/2024/06/dry-brittle-code/</link>
      <pubDate>Fri, 28 Jun 2024 10:24:34 -0600</pubDate>
      <guid>http://localhost:1313/posts/2024/06/dry-brittle-code/</guid>
      <description>Software Engineer students will hear &amp;ldquo;DRY&amp;rdquo; or Don&amp;rsquo;t Repeat Yourself numerous times as they are learning to design, build and test software. Even professionals will argue over removing duplicate code. Unfortunately, making code DRY isn&amp;rsquo;t as cut-and-dry (pun intended).&#xA;Here is a really simple example of DRY and brittle code. Say we have some CSS like below.&#xA;```css .service-card { font-family: monospace; background-color: #18B218; width: 320px; height: 200px; } .product-card{ font-family: monospace; background-color: #18B218; width: 320px; height: 200px; } ``` Just because there are duplicate values does not mean there are duplicate semantics.</description>
    </item>
  </channel>
</rss>
